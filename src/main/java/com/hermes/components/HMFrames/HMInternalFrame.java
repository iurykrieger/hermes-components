package com.hermes.components.HMFrames;

import com.hermes.components.HMFields.HMFormattedTextField;
import com.hermes.components.HMFields.HMTextField;
import com.hermes.components.HMSelections.HMComboBox;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 *
 * @author iury
 */
public class HMInternalFrame extends JInternalFrame {
    
    private HMPanel panel;

    public HMPanel getPanel() {
        return panel;
    }

    public void setPanel(HMPanel panel) {
        this.panel = panel;
    }
    
    public void salvar(){
        
    }
    
    public HMPanel getHMPanel(){
        return this.panel;
    }

    public void resetaForm(JPanel jp) {
        Component[] componentes = jp.getComponents();
        String classe;
        for (int contador = 0; contador < componentes.length; contador++) {
            classe = componentes[contador].getClass().getName();
            try {
                if (classe.contains("JPanel")) {
                    resetaForm((JPanel) componentes[contador]);
                } else {
                    if (classe.contains("HMTextField")) {
                        ((HMTextField) componentes[contador]).setText("");
                    }
                    if (classe.contains("HMFormattedTextField")) {
                        ((HMFormattedTextField) componentes[contador]).setText("");
                    }
                    if (classe.contains("HMComboBox")) {
                        ((HMComboBox) componentes[contador]).setSelectedIndex(0);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Não foi possível resetar os campos!");
            }
        }
    }

    public HMInternalFrame() {
        initComponents();
        setIconifiable(true);
        setMaximizable(true);
        setClosable(true);
        setResizable(false);
        setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
        //setCenterPosition();
        toFront();
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(239, 250, 253));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
